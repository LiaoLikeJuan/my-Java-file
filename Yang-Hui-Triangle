/*
问题描述
杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。
它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。
下面给出了杨辉三角形的前4行：
   1
  1 1
 1 2 1
1 3 3 1
给出n，输出它的前n行。
输入格式    输入包含一个数n。
输出格式    输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。

样例输入
4
样例输出
1
1 1
1 2 1
1 3 3 1
数据规模与约定    1 <= n <= 34。
*/

import java.util.Arrays;
import java.util.Scanner;

public class YangHuiTriangle {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        /*
        [ 0 0 0 0 ]
        [ 0 0 0 0 ]
        [ 0 0 0 0 ]
        [ 0 0 0 0 ]
         */
        int[][] tri = new int[n][n];
        for (int i = 0; i < n; i++) {
            tri[i][0] = 1;
        }
        /*
               0 1 2 3
          0  [ 1 0 0 0 ]
          1  [ 1 1 0 0 ]    (1,1) = (0,0) + (0,1) = 1
          2  [ 1 2 1 0 ]    (2,1) = (1,0) + (1,1) = 2  (2,2) = (1,1) + (1,2) = 1
          3  [ 1 3 3 1 ]    (3,1) = (2,0) + (2,1) = 3  (3,2) = (2,1) + (2,2) = 3  (3,3) = (2,2) + (2,3) = 1
         */
        for (int i = 1; i < n; i++) {
            for (int j = 1; j <= i; j++) {
                tri[i][j] = tri[i-1][j-1] + tri[i-1][j];
            }
        }
        // for (int[] ints : tri) {System.out.println(Arrays.toString(ints));}
        for (int[] ints : tri) {
            for (int j = 0; j < tri.length; j++) {
                if (ints[j] == 0) {
                    break;
                }
                System.out.print(ints[j]);
                if (j != tri.length - 1 && ints[j + 1] != 0) {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
        sc.close();
    }
}

